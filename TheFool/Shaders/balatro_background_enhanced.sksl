uniform float iTime;
uniform float2 iResolution;
uniform float spin_rotation;
uniform float spin_speed;
uniform float2 offset;
uniform float4 colour_1;
uniform float4 colour_2;
uniform float4 colour_3;
uniform float contrast;
uniform float lighting;
uniform float spin_amount;
uniform float pixel_filter;
uniform float spin_ease;
uniform float is_rotate;
uniform float2 mouse;

float4 main(float2 fragCoord) {
    // Pixelation effect
    float pixel_size = length(iResolution) / pixel_filter;
    float2 screen_coords = fragCoord;
    
    // Flip Y coordinate for AvaloniaUI coordinate system
    screen_coords.y = iResolution.y - screen_coords.y;
    
    float2 uv = (floor(screen_coords * (1.0 / pixel_size)) * pixel_size - 0.5 * iResolution) / length(iResolution) - offset;
    float uv_len = length(uv);
    
    // Speed calculation with mouse influence
    float speed = (spin_rotation * spin_ease * 0.2);
    if (is_rotate > 0.5) {
        speed = iTime * speed;
    }
    speed += 302.2;
    
    // Mouse